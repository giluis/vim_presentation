pick 940a784 test(Component3): Add test for constructor
pick caf6c60 fix(Component2): add common header file 
pick 4761d3c fix(README): Add first tests
pick a030c21 test(Component5): add test file to CMakeLists
pick 50a75c8 cover(req141): add necessary includes
pick 271cc7c fix(Component6): removed unused include
pick a0e2032 test(Main): add expectation to test Req 238
pick 84de1b4 fix(Component5): fixed double free
pick 7ee2496 fix(Compoment2): removed unused include 
pick c6848e1 fix(Main): add null check
# pick cc5849c test(Main): add expectation to test Req 155

# Rebase 3e77532..9bc1f64 onto 3e77532 (30 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup <commit> = like "squash", but discard this commit's log message
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c <commit> to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.

